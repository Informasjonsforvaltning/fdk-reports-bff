name: Deploy to production

on:
  push:
    branches:
      - main

jobs:
  build-test-and-deploy-production:
    name: Build, test, publish and deploy to production environment on merge to master branch
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup python environment
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1

    - name: Install invoke
      run: pip install invoke

    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
      
    - name: Install requests
      run: pip install requests

    - name: Install dev dependencies
      run: pipenv install --dev

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}

    - name: Lint
      run: invoke lint

    - name: Safety check
      run: invoke safety

    - name: Configure docker to use the gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker eu.gcr.io

    - name: Build Docker image with GitHub commit sha tag and latest tag
      run: invoke build-image --tags=eu.gcr.io/digdir-fdk-infra/fdk-reports-bff:$GITHUB_SHA,eu.gcr.io/digdir-fdk-infra/fdk-reports-bff:latest

    - name: Run tests
      run: |
        invoke unit-test --install
#        invoke contract-test --compose --image=eu.gcr.io/digdir-fdk-infra/fdk-reports-bff:latest
#        invoke stop-docker

    - name: Publish docker image to Google Cloud
      run: docker -- push eu.gcr.io/digdir-fdk-infra/fdk-reports-bff -a

    - name: Apply Helm template
      run: |
          helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
          helm fetch --untar --untardir ./helm fdk/fdk-reports-bff
          helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/fdk-reports-bff:$GITHUB_SHA" -f ./helm/fdk-reports-bff/values/prod.yaml ./helm/fdk-reports-bff/ > ./kubectlapply.yaml
          chmod o+w ./kubectlapply.yaml
          cat kubectlapply.yaml

    - name: Get kubeconfig file from GKE
      uses: machine-learning-apps/gke-kubeconfig@master
      with:
        application_credentials: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
        project_id: digdir-fdk-prod
        location_zone: europe-north1-a
        cluster_name: digdir-fdk-prod

    - name: Deploy to production
      uses: docker://bitnami/kubectl:latest
      env:
        KUBECONFIG: '/github/workspace/.kube/config'
      with:
        args: "apply -f ./kubectlapply.yaml --force"

    - name: Notify slack
      uses: 8398a7/action-slack@v3
      with:
        mention: 'channel'
        if_mention: failure
        status: ${{ job.status }}
        author_name: 'Application: fdk-reports-bff | Environment: prod'
        fields: commit,author,workflow,message
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()

    - name: Trigger deploy to demo
      uses: peter-evans/repository-dispatch@master
      with:
        token: ${{ secrets.DISPATCH_TOKEN }}
        event-type: deploy-demo
        client-payload: '{"sha": "${{ github.sha }}"}'
