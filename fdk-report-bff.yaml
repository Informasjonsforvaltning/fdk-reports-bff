openapi: 3.0.0
info:
  title: fdk-reports-bff
  version: '1.0'
  description: Backend for Frontend service that provides information about organizations and their published content in Felles Datakatalogs
  contact:
    name: Felles Datakatalog
    url: 'https://fellesdatakatalog.digdir.no/'
    email: fellesdatakatalog@digdir.no
  license:
    url: 'http://data.norge.no/nlod/no/2.0'
    name: License of API
servers:
  - url: 'http://report-bff.data.norge.no'
    description: production
  - url: 'https://report-bff.staging.fellesdatakatalog.digdir.no/'
    description: staging
paths:
  /ready:
    get:
      summary: check if application is ready to accept requests
      operationId: get-ready
      responses:
        '200':
          description: OK if service is runnning and can contact other services
        '503':
          description: Temporarily unavailable. Returned if fdk-organization-bff can not contact other services
  /ping:
    get:
      summary: ping endpoint for application fidders from ready in that is does not check if other servies are contactable
      operationId: ping
      responses:
        '200':
          description: OK if service is runnning
  /report/concepts:
    get:
      summary: get report for concepts
      operationId: getConceptsReport
      responsese:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptsReport'
  /reoprt/informationmodels:
    get:
      summary: get report for informationmodels
      operationId: getInformationModelsReport
      responsese:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationModelsReport'
  /report/datasets:
    get:
      summary: get report for datasets
      operationId: getDatasetsReport
      responsese:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetsReport'
  report/dataservices:
    get:
      summary: get report for concepts
      operationId: getConcepts
      responsese:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataServicesReport'
components:
  schemas:
    Report:
      title: Report
      type: object
      properties:
        totalElements:
          type: string
        newElementsLastWeek:
          type: string
        organizations:
          type: array
          items: "$ref:'#/components/schemas/Organization'"
    InformationModelsReport:
      title: InformationModelReport
      allOf:
        - $ref: '#/components/schemas/Report'
        - type: object
          properties:
            usedIn:
              type: object
              properties:
                dataset_count:
                  type: string
                dataservice_count:
                  type: string
    ConceptsReport:
      title: ConceptReport
      allOf:
        - $ref: '#/components/schemas/Report'
        - type: object
          properties:
            datasetRelations:
              type: integer
            mostInUse:
              type: array
              items: "$ref :'#/components/schemas/References'"
    Reference:
      schemas:
        title: "$ref '#/components/schemas/LanguageObject'"
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LanguageObject'
        uri:
          type: string
          format: uri
    LanguageObject:
      type: object
      properties:
        nb:
          type: string
        nn:
          type: string
        'no':
          type: string
        en:
          type: string
    Organization:
      title: Organizations
      type: object
      properties:
        count:
          type: integer
        orgPath:
          type: string
          format: uri
    DataSetsReport:
      title: DataSetsReport
      allOf:
        - $ref: '#/components/schemas/Report'
        - type: object
          properties:
            withDistribution:
              type:number
            publicWihoutDistirbution:
              type: number
            nonPublicWithDistribution:
              type: number
            nonPublicWithoutDistribution:
              type: number
            distirbutionCountForType:
              type: object
              properties:
                api:
                  type: number
                feed:
                  type: number
                file:
                  type: number
            nationalComponent:
              type: number
            opendata:
              type: number
            catalogs:
                type: array
                items: "$ref: #/components/schemas/KeyWithCountObject"
            withSubject:
              type: number
            accessRights:
              type: array
              items: "$ref: #/components/schemas/KeyWithCountObject"
    DataServicesReport:
      title: DataServiceRepor
      allOf:
        - properties:
            openLicence:
              $ref: '$ref: #/components/schemas/PrepositionCountObject'
            openAccess:
              $ref: '$ref: #/components/schemas/PrepositionCountObject'
            freeUsage:
              $ref: '$ref: #/components/schemas/PrepositionCountObject'
            formats:
              type: array
              items: "$ref:'#/components/schemas/Format'"
      type: object
    Format:
      title: Format
      type: object
      properties:
        title:
          type: string
        count:
          type: string
    KeyWithCountObject:
      type: object
      properties:
        key:
          type: string
        count:
          type: number
    PrepositionCountObject:
      type: object
      properties:
        with:
          type: number
        without:
          type: number

